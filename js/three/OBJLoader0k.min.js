THREE.OBJLoader=(function(){var a=/^[og]\s*(.+)?/;var e=/^mtllib /;var d=/^usemtl /;function b(){var f={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(g,i){if(this.object&&this.object.fromDeclaration===false){this.object.name=g;this.object.fromDeclaration=(i!==false);return}var h=(this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined);if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}this.object={name:g||"",fromDeclaration:(i!==false),geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:true,startMaterial:function(l,k){var n=this._finalize(false);if(n&&(n.inherited||n.groupCount<=0)){this.materials.splice(n.index,1)}var m={index:this.materials.length,name:l||"",mtllib:(Array.isArray(k)&&k.length>0?k[k.length-1]:""),smooth:(n!==undefined?n.smooth:this.smooth),groupStart:(n!==undefined?n.groupEnd:0),groupEnd:-1,groupCount:-1,inherited:false,clone:function(p){var o={index:(typeof p==="number"?p:this.index),name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};o.clone=this.clone.bind(o);return o}};this.materials.push(m);return m},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(k){var m=this.currentMaterial();if(m&&m.groupEnd===-1){m.groupEnd=this.geometry.vertices.length/3;m.groupCount=m.groupEnd-m.groupStart;m.inherited=false}if(k&&this.materials.length>1){for(var l=this.materials.length-1;l>=0;l--){if(this.materials[l].groupCount<=0){this.materials.splice(l,1)}}}if(k&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return m}};if(h&&h.name&&typeof h.clone==="function"){var j=h.clone(0);j.inherited=true;this.object.materials.push(j)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize(true)}},parseVertexIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/3)*3},parseNormalIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/3)*3},parseUVIndex:function(i,g){var h=parseInt(i,10);return(h>=0?h-1:h+g/2)*2},addVertex:function(h,g,k){var i=this.vertices;var j=this.object.geometry.vertices;j.push(i[h+0],i[h+1],i[h+2]);j.push(i[g+0],i[g+1],i[g+2]);j.push(i[k+0],i[k+1],i[k+2])},addVertexLine:function(g){var h=this.vertices;var i=this.object.geometry.vertices;i.push(h[g+0],h[g+1],h[g+2])},addNormal:function(h,g,k){var i=this.normals;var j=this.object.geometry.normals;j.push(i[h+0],i[h+1],i[h+2]);j.push(i[g+0],i[g+1],i[g+2]);j.push(i[k+0],i[k+1],i[k+2])},addUV:function(h,g,k){var i=this.uvs;var j=this.object.geometry.uvs;j.push(i[h+0],i[h+1]);j.push(i[g+0],i[g+1]);j.push(i[k+0],i[k+1])},addUVLine:function(g){var h=this.uvs;var i=this.object.geometry.uvs;i.push(h[g+0],h[g+1])},addFace:function(r,q,p,h,g,u,n,m,l){var s=this.vertices.length;var k=this.parseVertexIndex(r,s);var j=this.parseVertexIndex(q,s);var i=this.parseVertexIndex(p,s);this.addVertex(k,j,i);if(h!==undefined){var o=this.uvs.length;k=this.parseUVIndex(h,o);j=this.parseUVIndex(g,o);i=this.parseUVIndex(u,o);this.addUV(k,j,i)}if(n!==undefined){var t=this.normals.length;k=this.parseNormalIndex(n,t);j=n===m?k:this.parseNormalIndex(m,t);i=n===l?k:this.parseNormalIndex(l,t);this.addNormal(k,j,i)}},addLineGeometry:function(j,k){this.object.geometry.type="Line";var m=this.vertices.length;var i=this.uvs.length;for(var n=0,g=j.length;n<g;n++){this.addVertexLine(this.parseVertexIndex(j[n],m))}for(var h=0,g=k.length;h<g;h++){this.addUVLine(this.parseUVIndex(k[h],i))}}};f.startObject("",false);return f}function c(f){this.manager=(f!==undefined)?f:THREE.DefaultLoadingManager;this.materials=null}c.prototype={constructor:c,load:function(g,i,k,j){var h=this;var f=new THREE.FileLoader(h.manager);f.setPath(this.path);f.load(g,function(l){i(h.parse(l))},k,j)},setPath:function(f){this.path=f},setMaterials:function(f){this.materials=f;return this},parse:function(v){console.time("OBJLoader");var X=new b();if(v.indexOf("\r\n")!==-1){v=v.replace(/\r\n/g,"\n")}if(v.indexOf("\\\n")!==-1){v=v.replace(/\\\n/g,"")}var w=v.split("\n");var f="",H="";var M=0;var p=[];var C=(typeof"".trimLeft==="function");for(var O=0,K=w.length;O<K;O++){f=w[O];f=C?f.trimLeft():f.trim();M=f.length;if(M===0){continue}H=f.charAt(0);if(H==="#"){continue}if(H==="v"){var R=f.split(/\s+/);switch(R[0]){case"v":X.vertices.push(parseFloat(R[1]),parseFloat(R[2]),parseFloat(R[3]));break;case"vn":X.normals.push(parseFloat(R[1]),parseFloat(R[2]),parseFloat(R[3]));break;case"vt":X.uvs.push(parseFloat(R[1]),parseFloat(R[2]));break}}else{if(H==="f"){var x=f.substr(1).trim();var I=x.split(/\s+/);var u=[];for(var N=0,g=I.length;N<g;N++){var q=I[N];if(q.length>0){var W=q.split("/");u.push(W)}}var U=u[0];for(var N=1,g=u.length-1;N<g;N++){var T=u[N];var S=u[N+1];X.addFace(U[0],T[0],S[0],U[1],T[1],S[1],U[2],T[2],S[2])}}else{if(H==="l"){var k=f.substring(1).trim().split(" ");var t=[],D=[];if(f.indexOf("/")===-1){t=k}else{for(var y=0,B=k.length;y<B;y++){var P=k[y].split("/");if(P[0]!==""){t.push(P[0])}if(P[1]!==""){D.push(P[1])}}}X.addLineGeometry(t,D)}else{if((p=a.exec(f))!==null){var h=(" "+p[0].substr(1).trim()).substr(1);X.startObject(h)}else{if(d.test(f)){X.object.startMaterial(f.substring(7).trim(),X.materialLibraries)}else{if(e.test(f)){X.materialLibraries.push(f.substring(7).trim())}else{if(H==="s"){p=f.split(" ");if(p.length>1){var F=p[1].trim().toLowerCase();X.object.smooth=(F!=="0"&&F!=="off")}else{X.object.smooth=true}var L=X.object.currentMaterial();if(L){L.smooth=X.object.smooth}}else{if(f==="\0"){continue}throw new Error("Unexpected line: '"+f+"'")}}}}}}}}X.finalize();var z=new THREE.Group();z.materialLibraries=[].concat(X.materialLibraries);for(var O=0,K=X.objects.length;O<K;O++){var E=X.objects[O];var m=E.geometry;var A=E.materials;var G=(m.type==="Line");if(m.vertices.length===0){continue}var J=new THREE.BufferGeometry();J.addAttribute("position",new THREE.BufferAttribute(new Float32Array(m.vertices),3));if(m.normals.length>0){J.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(m.normals),3))}else{J.computeVertexNormals()}if(m.uvs.length>0){J.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(m.uvs),2))}var Q=[];for(var n=0,o=A.length;n<o;n++){var s=A[n];var L=undefined;if(this.materials!==null){L=this.materials.create(s.name);if(G&&L&&!(L instanceof THREE.LineBasicMaterial)){var V=new THREE.LineBasicMaterial();V.copy(L);L=V}}if(!L){L=(!G?new THREE.MeshPhongMaterial():new THREE.LineBasicMaterial());L.name=s.name}L.flatShading=s.smooth?false:true;Q.push(L)}var r;if(Q.length>1){for(var n=0,o=A.length;n<o;n++){var s=A[n];J.addGroup(s.groupStart,s.groupCount,n)}r=(!G?new THREE.Mesh(J,Q):new THREE.LineSegments(J,Q))}else{r=(!G?new THREE.Mesh(J,Q[0]):new THREE.LineSegments(J,Q[0]))}r.name=E.name;z.add(r)}console.timeEnd("OBJLoader");return z}};return c})();