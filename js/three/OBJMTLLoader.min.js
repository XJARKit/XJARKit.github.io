THREE.OBJMTLLoader=function(){THREE.EventDispatcher.call(this)};THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(b,d,j){var h=this;var g=new XMLHttpRequest();var a;var f;var e;var i=new THREE.MTLLoader(b.substr(0,b.lastIndexOf("/")+1),j);i.addEventListener("load",c);i.addEventListener("error",c);if(d){i.load(d);a=false}else{a=true}function c(k){if(k.type==="load"){if(k.content instanceof THREE.MTLLoader.MaterialCreator){a=true;e=k.content;e.preload()}else{if(k.target.status===200||k.target.status===0){var l=k.target.responseText;if(d){f=h.parse(l)}else{f=h.parse(l,function(m){a=false;i.load(i.baseUrl+m)})}}else{h.dispatchEvent({type:"error",message:"Couldn't load URL ["+b+"]",response:k.target.responseText})}}}else{if(k.type==="error"){a=true}}if(a&&f){if(e){f.traverse(function(m){if(m instanceof THREE.Mesh){if(m.material.name){var n=e.create(m.material.name);if(n){m.material=n}}}})}h.dispatchEvent({type:"load",content:f})}}g.addEventListener("load",c,false);g.addEventListener("progress",function(k){h.dispatchEvent({type:"progress",loaded:k.loaded,total:k.total})},false);g.addEventListener("error",function(){h.dispatchEvent({type:"error",message:"Couldn't load URL ["+b+"]"})},false);g.open("GET",b,true);g.send(null)},parse:function(B,A){B=B.replace(/\ \\\r\n/g,"");function c(i,E,D){return new THREE.Vector3(i,E,D)}function h(D,i){return new THREE.Vector2(D,i)}function l(D,i,F,E){return new THREE.Face3(D,i,F,E)}function k(D,i,G,F,E){return new THREE.Face4(D,i,G,F,E)}function r(i,D){if(f.vertices.length>0){f.mergeVertices();f.computeCentroids();f.computeFaceNormals();f.computeBoundingSphere();C.add(a);f=new THREE.Geometry();a=new THREE.Mesh(f,p);d=0}if(i!==undefined){a.name=i}if(D!==undefined){p=new THREE.MeshLambertMaterial();p.name=D;a.material=p}}var j=new THREE.Object3D();var C=j;var f=new THREE.Geometry();var p=new THREE.MeshLambertMaterial();var a=new THREE.Mesh(f,p);var g=[];var d=0;var q=[];var m=[];var s=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/;var t=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/;var x=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/;var z=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/;var y=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/;var w=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/;var v=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/;var b=B.split("\n");for(var u=0;u<b.length;u++){var o=b[u];o=o.trim();var n;if(o.length===0||o.charAt(0)==="#"){continue}else{if((n=s.exec(o))!==null){g.push(c(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3])))}else{if((n=t.exec(o))!==null){q.push(c(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3])))}else{if((n=x.exec(o))!==null){m.push(h(parseFloat(n[1]),parseFloat(n[2])))}else{if((n=z.exec(o))!==null){if(n[4]===undefined){f.vertices.push(g[parseInt(n[1])-1],g[parseInt(n[2])-1],g[parseInt(n[3])-1]);f.faces.push(l(d++,d++,d++))}else{f.vertices.push(g[parseInt(n[1])-1],g[parseInt(n[2])-1],g[parseInt(n[3])-1],g[parseInt(n[4])-1]);f.faces.push(k(d++,d++,d++,d++))}}else{if((n=y.exec(o))!==null){if(n[10]===undefined){f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[5])-1],g[parseInt(n[8])-1]);f.faces.push(l(d++,d++,d++));f.faceVertexUvs[0].push([m[parseInt(n[3])-1],m[parseInt(n[6])-1],m[parseInt(n[9])-1]])}else{f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[5])-1],g[parseInt(n[8])-1],g[parseInt(n[11])-1]);f.faces.push(k(d++,d++,d++,d++));f.faceVertexUvs[0].push([m[parseInt(n[3])-1],m[parseInt(n[6])-1],m[parseInt(n[9])-1],m[parseInt(n[12])-1]])}}else{if((n=w.exec(o))!==null){if(n[13]===undefined){f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[6])-1],g[parseInt(n[10])-1]);f.faces.push(l(d++,d++,d++,[q[parseInt(n[4])-1],q[parseInt(n[8])-1],q[parseInt(n[12])-1]]));f.faceVertexUvs[0].push([m[parseInt(n[3])-1],m[parseInt(n[7])-1],m[parseInt(n[11])-1]])}else{f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[6])-1],g[parseInt(n[10])-1],g[parseInt(n[14])-1]);f.faces.push(k(d++,d++,d++,d++,[q[parseInt(n[4])-1],q[parseInt(n[8])-1],q[parseInt(n[12])-1],q[parseInt(n[16])-1]]));f.faceVertexUvs[0].push([m[parseInt(n[3])-1],m[parseInt(n[7])-1],m[parseInt(n[11])-1],m[parseInt(n[15])-1]])}}else{if((n=v.exec(o))!==null){if(n[10]===undefined){f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[5])-1],g[parseInt(n[8])-1]);f.faces.push(l(d++,d++,d++,[q[parseInt(n[3])-1],q[parseInt(n[6])-1],q[parseInt(n[9])-1]]))}else{f.vertices.push(g[parseInt(n[2])-1],g[parseInt(n[5])-1],g[parseInt(n[8])-1],g[parseInt(n[11])-1]);f.faces.push(k(d++,d++,d++,d++,[q[parseInt(n[3])-1],q[parseInt(n[6])-1],q[parseInt(n[9])-1],q[parseInt(n[12])-1]]))}}else{if(/^o /.test(o)){C=new THREE.Object3D();C.name=o.substring(2).trim();j.add(C)}else{if(/^g /.test(o)){r(o.substring(2).trim(),undefined)}else{if(/^usemtl /.test(o)){r(undefined,o.substring(7).trim())}else{if(/^mtllib /.test(o)){if(A){var e=o.substring(7);e=e.trim();A(e)}}else{if(/^s /.test(o)){}else{console.log("THREE.OBJMTLLoader: Unhandled line "+o)}}}}}}}}}}}}}}r(undefined,undefined);return j}};